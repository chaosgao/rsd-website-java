package com.rsd.day4;
/**
 * 递归算法自练习
 * 题目内容：
 * 现在有一对小兔子，它们需要三个月的时间才能长成大兔子，同时还会产下一对小兔子。假设兔子们都不会死，那么请问，在三年后，一共会有多少只兔子呢？
 *
 *规律
 * 第1个月    1 0 0    1对兔子    2只兔子
 * 第2个月    0 1 0    1对兔子    2只兔子
 * 第3个月    1 0 1    2对兔子    4只兔子
 * 第4个月    1 1 1    3对兔子    6只兔子
 * 第5个月    2 1 2    5对兔子    10只兔子
 * 第6个月    3 2 3    8对兔子    16只兔子
 * 第7个月    5 3 5    13对兔子    26只兔子
 * 第8个月    8 5 8    21对兔子    42只兔子
 * ...
 * 从第三个月开始，兔子的总对数是前面两个月的总和。
 * 3月    1月的数量+2月的数量    1+1    2
 * 4月    2月的数量+3月的数量    1+2    3
 * 5月    3月的数量+4月的数量    2+3    5
 * ...
 * 题目要求是三年后，一共有多只兔子。因此，先声明一个36位的数组，用来遍历。
 * 因为第一个月和第二个月都只有一对两只，因此加入判断，如果是第一个月或者第二个月，那么加入相应位置的数值是1.
 */
public class Test3 {
    public static void main(String[] args) {
        int i;

        int[] arr = new int[36];
        for (i= 0;i < arr.length;i++){
            if (i==1 || i==0){
                arr[i] = 1;
                System.out.println("第"+(i+1)+"个月有"+2*arr[i]+"只兔子");
            }else {
                arr[i] = arr[i-1]+arr[i-2];
                System.out.println("第"+(i+1)+"个月有"+2*arr[i]+"只兔子");
            }
        }
    }
}
